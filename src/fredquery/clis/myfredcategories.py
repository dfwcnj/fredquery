
#! env python

# return information on categories, their releases, or their series
#
#

import argparse

from  fredquery import fredcategories

def main():
    fc = fredcategories.FREDcategories()

    argp = argparse.ArgumentParser(description='collect and report stlouisfed.org FRED categories and/or series')

    argp.add_argument('--categories', action='store_true', default=False,
                       help="report category data")
    argp.add_argument('--series', action='store_true', default=False,
                       help="report series urls for categories collected")
    argp.add_argument('--observations', action='store_true', default=False,
                       help="report timeseries data for categories")

    argp.add_argument('--categoryid', help="categories are identified by\
          category_id")
    argp.add_argument('--seriesid', help="series are identified by series_id")

    argp.add_argument('--file', help="path to an output filename\n\
            if just a filename and--directory is not provided\
            the file is created in the current directory")
    argp.add_argument('--directory',
                    help="directory to write the output use --directory for\n\
                         storing observations, filenames autogenerated")

    args = argp.parse_args()

    if not args.categories and not args.series and not args.observations:
        argp.print_help()
        sys.exit()

    ofn = None
    fp = sys.stderr

    if not args.observations:
        if not args.directory and args.file:
            ofn = args.file
        elif args.directory and args.file:
            if '/' in args.file:
                argp.print_help()
                sys.exit()
            ofn = os.path.join(args.directory, args.file)
        if ofn:
            try:
                fp = open(ofn, 'w')
            except Exception as e:
                print('%s: %s' % (ofn, e) )

    if args.observations:
        if not args.directory:
            argp.print_help()
            sys.exit()
        if args.categoryid:
            fc.getseriesforcid(cid=args.categoryid)
            fc.getobservations()
            fc.reportobservations(odir=args.directory)
        else:
            fc.getcategories()
            fc.getseries()
            fc.getobservations()
            fc.reportobservations(odir=args.directory)
    elif args.series and args.categoryid:
        fc.getseriesforcid(cid=args.categoryid)
        fc.reportseries(ofp=fp)
    elif args.series and args.seriesid:
        fc.getseriesforsid(cid=args.seriesid)
        fc.reportseries(ofp=fp)
    elif args.categories:
        fc.getcategories()
        fc.reportcategories(ofp=fp)

if __name__ == '__main__':
    main()
