

#! env python

# return information on sources and their releases
#

import argparse
import sys

from  fredquery import fredsources


def main():
    fs = fredsources.FREDsources()
    argp = argparse.ArgumentParser(description='collect and report stlouisfed.org  FRED sources and/or their releases')

    argp.add_argument('--sources', action='store_true', default=False,
       help='return sources')
    argp.add_argument('--releases', action='store_true', default=False,
       help='return releases for a source_id')
    argp.add_argument('--observations', action='store_true', default=False,
       help='return observations for a source_id')

    argp.add_argument('--sourceid', required=False,
       help='a source_id identifies a FRED source')

    argp.add_argument('--file', help="path to an output filename\n\
            if just a filename and--directory is not provided\
            the file is created in the current directory")
    argp.add_argument('--directory',
                    help="directory to write the output, if --observations\
                         filenames are autogenerated")

    args=argp.parse_args()

    if not args.sources and not args.releases and not args.observations:
        argp.print_help()
        sys.exit(1)

    fp = sys.stdout

    if not args.observations:
        if not args.directory and args.file:
            ofn = args.file
        elif args.directory and args.file:
            if '/' in args.file:
                argp.print_help()
                sys.exit()
            ofn = os.path.join(args.directory, args.file)
        if ofn:
            try:
                fp = open(ofn, 'w')
            except Exception as e:
                print('%s: %s' % (ofn, e) )
                sys.exit()

    if args.observations:
        if not args.directory:
            argp.print_help()
            sys.exit()
        if args.sourceid:
            fs.getsource(sid = args.sourceid)
            fs.getreleases()
            fs.getseries()
            fs.getandreportobservations(odir=args.directory)
        else:
            fs.getsource()
            fs.getreleases()
            fr.getseries()
            fs.getandreportobservations(odir=args.directory)
    elif args.sources:
        fs.getsources()
        fs.reportsources(ofp=fp)
    elif args.releases and args.sourceid:
        fs.getsource(sid = args.sourceid)
        fs.getreleases()
        fs.reportreleases(ofp=fp)
    elif args.sources and args.sourceid:
        fs.getsource(sid = args.sourceid)
        fs.reportsources(odir=args.directory)
    elif args.releases:
        fs.getsources()
        fs.getreleases()
        fs.reportreleases(ofp=fp)

if __name__ == '__main__':
    main()
